

<div class="cityCard belowHeader__overlap" style="background-image:url('<%= @city.photo_url %>')">
  <div class="details">
    <h1><%= @city.full_name  %></h1>    
  </div>
  <div class="photographer">
  <a href="<%= @city.photo_user_url %>" target="_blank">Photography credit</a>
  </div>
</div>

<div class="mainWrapper">
<section class="main">

  <div class="chart"></div>

  <% if @city.hours %>
  <table>
    <tr>
      <th class="hideable">Date</th>
      <th>Time</th>
      <th>Temp.</th>
      <th class="hideable_2">Pressure</th>
      <th>Wind speed</th>
      <th class="hideable">Wind direction</th>
      <th class="hideable_2">Cloudiness</th>
    </tr>
    <% @city.hours.each do |hour| %>

    <%= render hour %>
    <% end %>
  </table>


<%= link_to "Edit this city", edit_city_path(@city) %>


  <script>
    var temp_data = []
    <% @city.hours.each do |hour| %>
    temp_data.push({"weather_time" : (new Date(<%= (hour.weather_time.to_f * 1000) %>)), "temp" : <%= hour.temp %>})
    <% end %>

    var w = 600;
    var h = 300;
  var barPadding = 1;  // <-- New!
  var padding = 20;
  var svg = d3.select(".chart")
  .append("svg")
  .attr("width", w)
  .attr("height", h);

  var xScale = d3.time.scale()
  .domain([Math.min.apply(Math,temp_data.map(function(o){return o.weather_time;})), Math.max.apply(Math,temp_data.map(function(o){return o.weather_time;}))])
  .range([padding * 1.5, w]);

  var yScale = d3.scale.linear()
  .domain([Math.min.apply(Math,temp_data.map(function(o){return o.temp;})) - 10, Math.max.apply(Math,temp_data.map(function(o){return o.temp;})) + 2])
  .range([h - (padding * 1.5), 0]);


  xAxis = d3.svg.axis()
  .scale(xScale)
  .ticks(12)
  .tickFormat(d3.time.format("%H:%M"));
  
  yAxis = d3.svg.axis()
  .scale(yScale)
  .orient("left");

  svg.append("svg:g")
  .attr("class","axis")
  .attr("transform", "translate(0," + (h - (padding * 1.5)) + ")")
  .call(xAxis);

  svg.append("svg:g")
  .attr("class","axis")
  .attr("transform", "translate(" + (padding * 1.5) + ",0)")
  .call(yAxis);


// 
var lineGen = d3.svg.line()
.x(function(d) {
  return xScale(d.weather_time);
})
.y(function(d) {
  return yScale(d.temp);
});

svg.append('svg:path')
.attr('d', lineGen(temp_data))
.attr('stroke', '#30638A')
.attr('stroke-width', 1)
.attr('fill', 'none');

// 

  // svg.selectAll("rect")
  // .data(temp_data)
  // .enter()
  // .append("rect")
  // .attr("x", function(d, i) {
  //   return i * (w / temp_data.length);
  // })
  // .attr("y", function(d) {
  //     return h - yScale(d);  //Height minus data value
  //   })
  // .attr("width", w / temp_data.length - barPadding)
  // .attr("height", function(d) {
  //   return yScale(d);
  // })
  // .attr("fill", 'gainsboro');




</script>

<% end %>


</section>
</div>